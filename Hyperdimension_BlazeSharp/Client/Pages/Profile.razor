@page "/profile"
@inject HttpClient HttpClient
@layout NoPaddingLayout

<div class="bg-banner" style="background-image: url('../img/@banner')" />
<div class="d-flex flex-column px-4">
    <div class="p-2 d-flex flex-column flex-sm-row">
        <img src="@(user?.UsersDetails.AvatarUrl)" class="rounded mx-sm-0 mx-auto avatar" alt="...">
        <h4 class="p-2 ml-2 bg-lightergrey rounded my-auto text-center">@(user?.Email)</h4>
    </div>

    @if (user?.UsersDetails.About is not null)
    {
        <div class="container-fluid py-2 my-3 rounded bg-lightergrey">
            <span class="pb-2 h3">About</span><br />
            <span>@user.UsersDetails.About</span>
        </div>
    }

    <h1 class="font-weight-light text-center text-lg-left mt-4 mb-0">Completed modules</h1>
    <hr class="mt-2 mb-5">

    <div class="d-flex flex-row p-2">
        @foreach (var module in completedModules)
        {
            <div class="card p-2 mw-25">
                <img class="card-img-top" src="@module.Item1" alt="Card image cap">
                <div class="card-body"> @module.Item2 </div>
            </div>
        }
    </div>

</div>


@code {
    List<Tuple<string, string>> completedModules = new()
    {
        new("https://image.shutterstock.com/image-photo/white-transparent-leaf-on-mirror-260nw-1029171697.jpg", "first module")
    };

    private Users user;
    private string banner = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        user = await HttpClient.GetFromJsonAsync<Users>("users/profile");
        var banners = await HttpClient.GetFromJsonAsync<string[]>("img/bg-banners.json");
        banner = banners[new Random().Next(0, banners.Length)];
    }
}
