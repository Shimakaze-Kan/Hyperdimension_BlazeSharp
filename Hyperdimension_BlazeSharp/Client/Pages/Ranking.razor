@page "/ranking"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<h3>Ranking</h3>

<div class="list-group">
    @if (RankingList is null)
    {
        <text>Loading...</text>
    }
    else
    {
        @foreach (var (user,index) in RankingList.Select((value, i) => (value, i+1)))
        {
            <a href="@($"profile/{user.Id}")" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                <strong>@index</strong> @user.Email
                <span class="badge badge-primary badge-pill">Points: @user.Points</span>
            </a>
        }
    }
</div>

@code {

    public List<UsersMinimal> RankingList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        RankingList = await HttpClient.GetFromJsonAsync<List<UsersMinimal>>("users/ranking");
    }

}
