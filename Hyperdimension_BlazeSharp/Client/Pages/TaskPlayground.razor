@inject HttpClient HttpClient

<div class="row">
    <div class="@editorPosition col-12">
        
        @if (task is not null)
        {
            <h4>@task.Title</h4>
        }

        @if (instruction is null)
        {
            <h3>Loading...</h3>
        }
        else
        {
            @instruction
        }
    </div>
    <div class="@editorPosition col-12">
        <div class="row mb-2">
            <div class="col">
                <select class="custom-select" @onchange="ChangeTheme">
                    <option value="vs">Visual Studio</option>
                    <option value="vs-dark">Visual Studio Dark</option>
                    <option value="hc-black">High Contrast Black</option>
                </select>
            </div>
            <div class="col">
                <button type="button" class="btn btn-outline-orange float-right" @onclick="Execute">Execute</button>
                <button type="button" class="btn btn-outline-orange float-right d-md-block d-none mr-1" @onclick="ChangeEditorPosition">Change Position</button>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <MonacoEditor Id="monaco-editor" @ref="_editor" ConstructionOptions="EditorConstructionOptions" />
            </div>
        </div>
        <div class="row w-100">
            <p>Output:</p>
            <div class="col border-top">
                @foreach (var item in output)
                {
                    @item <br />
                }
            </div>
        </div>
    </div>
</div>
@if (IsAdventure)
{
    <div class="fixed-bottom" style="background-color: #FF9912; color: white">Adventure mode</div>
}
else
{
    <div class="fixed-bottom" style="background-color: #3A66A7; color: white">Tutorial mode</div>
}

@code {
    private string instruction = string.Empty;
    private List<string> output = new();
    private Hyperdimension_BlazeSharp.Shared.Task task;

    public string Code { get; set; } = string.Empty;

    private string editorPosition = "col-md-6";

    [Parameter] public string Uuid { get; set; }
    [Parameter] public bool IsAdventure { get; set; } = false;

    private MonacoEditor _editor { get; set; }
    private string _code;

    protected override async Task OnInitializedAsync()
    {
        task = await HttpClient.GetFromJsonAsync<Hyperdimension_BlazeSharp.Shared.Task>("tasks/" + Uuid);

        instruction = task.Description;
        Code = task.InitialCode;
    }

    private void Execute()
    {
        output.Add("Hello World!");
    }

    private void ChangeEditorPosition()
    {
        editorPosition = (editorPosition == "col-md-6" ? "col-md-12" : "col-md-6");
    }

    private StandaloneEditorConstructionOptions EditorConstructionOptions(MonacoEditor editor)
    {
        return new StandaloneEditorConstructionOptions
        {
            AutomaticLayout = true,
            Language = "csharp",
            Value = @"using System;

namespace BlazeSharpPlayground
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine(""Hello World!"");
        }
    }
}"
        };
    }

    private async Task ChangeTheme(ChangeEventArgs e)
    {
        await MonacoEditor.SetTheme(e.Value.ToString());
    }

    private async Task GetValue()
    {
        _code = await _editor.GetValue();
    }
}
