@inject NavigationManager NavigationManager
@using Hyperdimension_BlazeSharp.Client.ViewModels
@inject ITaskPlaygroundViewModel _taskPlaygroundViewModel
@inject HttpClient HttpClient


<PropertyHasChangedListener ViewModel="_taskPlaygroundViewModel">
    <div class="overflow-hidden">

        <h4>@(_taskPlaygroundViewModel.Title ?? string.Empty)</h4>

        <div class="row">
            <div class="@_taskPlaygroundViewModel.EditorPosition col-12">
                <MarkupPanel Text="@(_taskPlaygroundViewModel.Instruction ?? "Loading...")" />
            </div>

            <div class="@_taskPlaygroundViewModel.EditorPosition col-12">
                <div class="row mb-2">
                    <SelectEditorTheme OnChange="@_taskPlaygroundViewModel.ChangeTheme" />

                    <TaskManagerPanel TaskId="_taskPlaygroundViewModel.TaskId"
                                      OnExecute="_taskPlaygroundViewModel.Execute"
                                      OnChangeEditorPosition="_taskPlaygroundViewModel.ChangeEditorPosition"
                                      OnRestorePreviousVersion="_taskPlaygroundViewModel.RestorePreviousVersion" />
                </div>
                <div class="row">
                    <div class="col">
                        <MonacoEditor Id="monaco-editor"
                                      @ref="_taskPlaygroundViewModel.Editor"
                                      ConstructionOptions="_taskPlaygroundViewModel.EditorConstructionOptions" />
                    </div>
                </div>
                <div class="row w-100">
                    <button type="button"
                            class="btn btn-outline-orange"
                            disabled="@(CantSubmit || !_taskPlaygroundViewModel.IsPassed)"
                            @onclick="SubmitTask">
                        Submit
                    </button>

                    <OutputConsole CompileText="@(_taskPlaygroundViewModel.CompileText ?? string.Empty)"
                                   Output="@(_taskPlaygroundViewModel.Output ?? string.Empty)" />
                </div>
            </div>
        </div>

        <BottomTaskBar Mode="_taskPlaygroundViewModel.Mode" 
                       Points="_taskPlaygroundViewModel.Points" />
    </div>
</PropertyHasChangedListener>
