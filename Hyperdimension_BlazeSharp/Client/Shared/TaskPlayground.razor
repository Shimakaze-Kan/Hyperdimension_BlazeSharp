@inject NavigationManager NavigationManager
@using Hyperdimension_BlazeSharp.Client.ViewModels
@inject ITaskPlaygroundViewModel _taskPlaygroundViewModel
@inject HttpClient HttpClient
@implements IDisposable


<PropertyHasChangedListener ViewModel="_taskPlaygroundViewModel">
    <div class="mb-5">

        <h4>@(_taskPlaygroundViewModel.Title ?? string.Empty)</h4>

        <div class="row">
            <div class="@EditorPosition col-12">
                <MarkupPanel Text="@(_taskPlaygroundViewModel.Instruction ?? "Loading...")" />
            </div>

            <div class="@EditorPosition col-12 @(IsFullscreen ? "fullscreen" : "")">
                <div class="row mb-2 pl-4">
                    <SelectEditorTheme OnChange="@_taskPlaygroundViewModel.ChangeTheme" />

                    <TaskManagerPanel TaskId="_taskPlaygroundViewModel.TaskId"
                                      OnExecute="_taskPlaygroundViewModel.Execute"
                                      OnChangeEditorPosition="ChangeEditorPosition"
                                      OnRestorePreviousVersion="_taskPlaygroundViewModel.RestorePreviousVersion" 
                                      IsExecuting="_taskPlaygroundViewModel.IsExecuting" 
                                      OnFullscreenChange="SwitchFullscreen" 
                                      IsFullscreen="IsFullscreen" />
                </div>
                <div class="row">
                    <div class="col overflow-visible">
                        <MonacoEditor Id="monaco-editor"
                                      @ref="_taskPlaygroundViewModel.Editor"
                                      ConstructionOptions="_taskPlaygroundViewModel.EditorConstructionOptions" />
                    </div>
                </div>
                <div class="row w-100 outputConsole">
                    <OutputConsole CompileText="@(_taskPlaygroundViewModel.CompileText ?? string.Empty)"
                                   Output="@(_taskPlaygroundViewModel.Output ?? string.Empty)" 
                                   IsWaiting="@_taskPlaygroundViewModel.IsExecuting" />
                </div>
            </div>
        </div>

        <button type="button"
                class="btn btn-outline-orange submitButton"
                disabled="@(CantSubmit || !_taskPlaygroundViewModel.IsPassed)"
                @onclick="SubmitTask">
            Submit
        </button>

        <BottomTaskBar Mode="_taskPlaygroundViewModel.Mode"
                       Points="_taskPlaygroundViewModel.Points" />
    </div>
</PropertyHasChangedListener>
